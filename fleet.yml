---
- name: Kolide Fleet Docker Install
  hosts: 127.0.0.1
  become: yes
  become_method: sudo
  connection: local

  tasks:
  
  - name: Add Docker GPG key.
    rpm_key:
      key: https://download.docker.com/linux/centos/gpg
      state: present

  - name: Add Docker repository.
    get_url:
      url: "https://download.docker.com/linux/centos/docker-ce.repo"
      dest: '/etc/yum.repos.d/docker-ce.repo'
      owner: root
      group: root
      mode: 0644

  - name: Install Docker.
    package:
      name: docker-ce
      state: latest

  - name: Install rsync to syncronize files
    package:
      name: rsync
      state: latest

  - name: Ensure Docker is started and enabled at boot.
    service:
      name: docker
      state: started
      enabled: true

  - name: Ensure EPEL is enabled 
    yum: 
      name: epel-release 
      state: present 

  - name: install python-pip
    yum:
      name: python-pip
      state: latest

  - name: pip install upgrade pip
    pip:
      name: pip
      extra_args: --upgrade

  - name: pip docker
    pip:
      name: docker

  - name: pip docker-compose
    pip:
      name: docker-compose

  - name: pip pyopenssl
    pip:
      name: pyopenssl
      
  - name: MySQL docker image
    docker_image:
      name: mysql:latest
      source: pull

  - name: Redis docker image
    docker_image:
      name: redis:latest
      source: pull

  - name: Mailhog docker image
    docker_image:
      name: mailhog/mailhog:latest
      source: pull

  - name: Kolide Fleet docker image
    docker_image:
      name: kolide/fleet:latest
      source: pull

  - name: Create Fleet persistence directory
    file:
      path: /opt/kolide/fleet
      state: directory
      mode: '0777'

  - name: Create Fleet certificate directory structure
    file:
      path: /opt/kolide/fleet/certs
      state: directory

  - name: Create MySQL persistence directory structure
    file:
      path: /opt/kolide/mysqldata
      state: directory
      mode: a+w      

  - name: Copy docker-compose file 
    copy:
      src: files/docker-compose.yml
      dest: /opt/kolide/

  - name: Copy Fleetctl, scripts and configs
    copy:
      src: files/{{ item }}
      dest: /opt/kolide/
      mode: a+rx
    with_items:
      - wait-for.sh
      - startfleet.sh
      - fleetctl

  - name: Synchronize osquery configs
    copy:
      src: files/osquery/
      dest: /opt/kolide/osquery/
 
  - name: Generate a private key for Kolide Fleet
    openssl_privatekey:
      path: /opt/kolide/fleet/certs/server.key
      mode: a+xr
 
  - name: Generate a CSR for Kolide Fleet
    openssl_csr:
      path: /opt/kolide/fleet/certs/server.csr
      mode: a+xr
      privatekey_path: /opt/kolide/fleet/certs/server.key
      country_name: "US"
      state_or_province_name: "TX"
      locality_name: "San Antonio"
      organization_name: "BSidesSATX"
      common_name: "fleet"
      use_common_name_for_san: yes
      extended_key_usage:
        - serverAuth
        - clientAuth
      basic_constraints: "CA:FALSE"

  - name: Generate a Self Signed OpenSSL certificate for Kolide Fleet
    openssl_certificate:
      path: /opt/kolide/fleet/certs/server.cert
      mode: a+xr
      privatekey_path: /opt/kolide/fleet/certs/server.key
      csr_path: /opt/kolide/fleet/certs/server.csr
      provider: selfsigned  

  - name: Create desktop shortcut image
    copy:
      src: images/
      dest: /usr/share/icons/

  - name: Create Fleet desktop shortcut
    copy:
      dest: /home/guerilla/Desktop/Kolide\ Fleet.desktop
      content: |
        [Desktop Entry]
        Encoding=UTF-8
        Name=Kolide Fleet
        Type=Link
        URL=https://127.0.0.1:8443
        Icon=/usr/share/icons/fleet.png
        Name[en_US]=Kolide Fleet
      
  - name: docker-compose up
    docker_compose:
      project_src: /opt/kolide
      state: present
